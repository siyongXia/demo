/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var MessageFormat_pb = require('./MessageFormat_pb.js');
var OperationType_pb = require('./OperationType_pb.js');
goog.exportSymbol('proto.Request', null, global);
goog.exportSymbol('proto.Request.Qos', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Request.displayName = 'proto.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestid: jspb.Message.getField(msg, 1),
    cid: jspb.Message.getField(msg, 2),
    oprate: jspb.Message.getField(msg, 3),
    qos: jspb.Message.getField(msg, 4),
    notify: (f = msg.getNotify()) && MessageFormat_pb.Notify.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && MessageFormat_pb.Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Request;
  return proto.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Request}
 */
proto.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequestid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCid(value);
      break;
    case 3:
      var value = /** @type {!proto.OperationType} */ (reader.readEnum());
      msg.setOprate(value);
      break;
    case 4:
      var value = /** @type {!proto.Request.Qos} */ (reader.readEnum());
      msg.setQos(value);
      break;
    case 5:
      var value = new MessageFormat_pb.Notify;
      reader.readMessage(value,MessageFormat_pb.Notify.deserializeBinaryFromReader);
      msg.setNotify(value);
      break;
    case 6:
      var value = new MessageFormat_pb.Message;
      reader.readMessage(value,MessageFormat_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {!proto.OperationType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.Request.Qos} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getNotify();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      MessageFormat_pb.Notify.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      MessageFormat_pb.Message.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.Request.Qos = {
  MOST_ONE: 0,
  LEAST_ONE: 1,
  EXACTLY_ONCE: 2
};

/**
 * optional int32 requestId = 1;
 * @return {number}
 */
proto.Request.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Request.prototype.setRequestid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Request.prototype.clearRequestid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 cid = 2;
 * @return {number}
 */
proto.Request.prototype.getCid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Request.prototype.setCid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Request.prototype.clearCid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasCid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required OperationType oprate = 3;
 * @return {!proto.OperationType}
 */
proto.Request.prototype.getOprate = function() {
  return /** @type {!proto.OperationType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.OperationType} value */
proto.Request.prototype.setOprate = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Request.prototype.clearOprate = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasOprate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Qos qos = 4;
 * @return {!proto.Request.Qos}
 */
proto.Request.prototype.getQos = function() {
  return /** @type {!proto.Request.Qos} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.Request.Qos} value */
proto.Request.prototype.setQos = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Request.prototype.clearQos = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasQos = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Notify notify = 5;
 * @return {?proto.Notify}
 */
proto.Request.prototype.getNotify = function() {
  return /** @type{?proto.Notify} */ (
    jspb.Message.getWrapperField(this, MessageFormat_pb.Notify, 5));
};


/** @param {?proto.Notify|undefined} value */
proto.Request.prototype.setNotify = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Request.prototype.clearNotify = function() {
  this.setNotify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasNotify = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Message message = 6;
 * @return {?proto.Message}
 */
proto.Request.prototype.getMessage = function() {
  return /** @type{?proto.Message} */ (
    jspb.Message.getWrapperField(this, MessageFormat_pb.Message, 6));
};


/** @param {?proto.Message|undefined} value */
proto.Request.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.Request.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Request.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto);
